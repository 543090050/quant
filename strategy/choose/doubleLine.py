# -*- coding: UTF-8 -*-"""@作者: 石雨风@时间: 2020/12/20@功能： 均线选股 - 买入/卖出"""from util.logUtil import loggerfrom util import dataUtildef strategy_ma8(code, stocks_info, current_data, history_data):    """    :param code:    :param stocks_info:    :param current_data: Series    :param history_data:    :return:    """    msg = ''    ma8 = history_data['close'][-8:].mean()    stocks_info.loc[code, 'ma8'] = ma8    pre_value = current_data['昨收']    last_value = current_data['最新价']    try:        ma8_flag = stocks_info.loc[code]['ma8_flag']    except KeyError:        stocks_info['ma8_flag'] = 'NaN'        ma8_flag = stocks_info.loc[code]['ma8_flag']    # 执行校验 跌破8    if pre_value > ma8 > last_value:        if ma8_flag != 'True':            msg = code + "跌破8日均线出现死叉;"            logger.debug(msg)            stocks_info.loc[code, 'ma8_flag'] = 'True'            dataUtil.put_h5_data("stocks_info", stocks_info)    return msgdef strategy_ma30(code, stocks_info, current_data, history_data):    """    :param code:    :param stocks_info:    :param current_data: Series    :param history_data:    :return:    """    msg = ''    ma30 = history_data['close'].mean()    stocks_info.loc[code, 'ma30'] = ma30    pre_value = current_data['昨收']    last_value = current_data['最新价']    try:        ma30_flag = stocks_info.loc[code]['ma30_flag']    except KeyError:        # 没有找到此列，则新建列        stocks_info['ma30_flag'] = 'NaN'        ma30_flag = stocks_info.loc[code]['ma30_flag']    # 执行校验 冲破30 跌破8    if pre_value < ma30 < last_value:        if ma30_flag != 'True':            msg = code + "冲破30日均线出现金叉;"            logger.debug(msg)            stocks_info.loc[code, 'ma30_flag'] = 'True'            dataUtil.put_h5_data("stocks_info", stocks_info)    return msg